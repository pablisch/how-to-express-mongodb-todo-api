openapi: 3.0.0
info:
  title: Todo API
  description: API to manage todos
  version: 1.0.0

paths:
  /todos:
    get:
      summary: Get all todos
      operationId: getAllTodos
      tags:
        - Todos
      responses:
        200:
          description: A list of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        500:
          description: Internal server error

    post:
      summary: Create a new todo
      operationId: createTodo
      tags:
        - Todos
      requestBody:
        description: Todo object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoCreate'
      responses:
        201:
          description: Todo created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        400:
          description: Bad request
        500:
          description: Internal server error

  /todos/{id}:
    get:
      summary: Get a todo by ID
      operationId: getTodoById
      tags:
        - Todos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Todo found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        400:
          description: Invalid todo ID
        404:
          description: Todo not found
        500:
          description: Internal server error

    put:
      summary: Update a todo by ID
      operationId: updateTodo
      tags:
        - Todos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Todo object to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoUpdate'
      responses:
        200:
          description: Todo updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        400:
          description: Invalid todo ID or invalid update data
        404:
          description: Todo not found
        500:
          description: Internal server error

    delete:
      summary: Delete a todo by ID
      operationId: deleteTodo
      tags:
        - Todos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Todo deleted
        400:
          description: Invalid todo ID
        404:
          description: Todo not found
        500:
          description: Internal server error

components:
  schemas:
    Todo:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier for the todo
        task:
          type: string
          description: The task to be completed
        completed:
          type: boolean
          description: Whether the todo is completed
        createdAt:
          type: string
          format: date-time
          description: The date and time when the todo was created
        updatedAt:
          type: string
          format: date-time
          description: The date and time when the todo was last updated

    TodoCreate:
      type: object
      required:
        - task
      properties:
        task:
          type: string
          description: The task to be completed

    TodoUpdate:
      type: object
      properties:
        task:
          type: string
          description: The task to be completed
        completed:
          type: boolean
          description: Whether the todo is completed
